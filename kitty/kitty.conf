# vim:fileencoding=utf-8:ft=conf

font_family      firacode
italic_font      auto
bold_font        auto
bold_italic_font auto
## Font size (in pts)
font_size        11.0

disable_ligatures cursor

# Symbol mapping (special font for specified unicode code points). Map the
# specified unicode codepoints to a particular font. Each unicode code
# point is specified in the form U+<code point in hexadecimal>. You can
# specify multiple code points, separated by commas and ranges separated by
# hyphens. symbol_map itself can be specified multiple times.
# Syntax is: symbol_map codepoints Font Family Name
#
# symbol_map U+E0A0-U+E0A2,U+E0B0-U+E0B3 PowerlineSymbols
# symbol_map U+0001F600-U+0001F999 FontILike

#One Dark

# Black:          #1E2127
# Bright Black:   #5C6370
# Red:            #E06C75
# Bright Red:     #E06C75
# Green:          #98C379
# Bright Green:   #98C379
# Yellow:         #D19A66
# Bright Yellow:  #D19A66
# Blue:           #61AFEF
# Light Blue:     #61AFEF
# Magenta:        #C678DD
# Light Magenta:  #C678DD
# Cyan:           #56B6C2
# Light Cyan:     #56B6C2
# White:          #ABB2BF
# Bright White:   #FFFFFF
# Text:           #ABB2BF
# Bold Text:      #ABB2BF
# Selection:      #3A3F4B
# Cursor:         #5C6370
# Background:     #1E2127
color0          #1e2127
color8          #5c6370
color1          #e06c75
color9          #e06c75
color2          #98c379
color10         #98c379
color3          #d19a66
color11         #d19a66
color4          #61afef
color12         #61afef
color5          #c678dd
color13         #c678dd
color6          #56b6c2
color14         #56b6c2
color7          #abb2bf
color15         #ffffff
foreground      #abb2bf
background      #1e2127
selection_foreground #abb2bf
selection_background #3a3f4b
cursor                #5c6370
cursor_shape     block
cursor_blink_interval 0

url_color             #6DCCF2
url_style curly

scrollback_lines 5000
scrollback_pager_history_size 10
enable_audio_bell no

linux_display_server wayland

# https://sw.kovidgoyal.net/kitty/conf.html#conf-kitty-performance
#repaint_delay 5
#input_delay 1
#sync_to_monitor no

# Key mapping
# For a list of key names, see: www.glfw.org/docs/latest/group__keys.html
# For a list of modifier names: www.glfw.org/docs/latest/group__mods.html
#
# You can use the special action no_op to unmap a keyboard shortcut that is
# assigned in the default configuration.
#
# You can combine multiple actions to be triggered by a single shortcut, using the
# syntax below:
# map key combine <separator> action1 <separator> action2 <separator> ...
# map ctrl+shift+e combine : new_window : next_layout

# The value of kitty_mod is used as the modifier for all default shortcuts.
# kitty_mod ctrl+shift

# You can have kitty remove all shortcut definition seen up to this point.
# Useful, for instance, to remove the default shortcuts.
# clear_all_shortcuts no

# Clipboard
map ctrl+shift+v        paste_from_clipboard
map ctrl+shift+c        copy_to_clipboard
map ctrl+shift+s        paste_from_selection

# Scrolling
map ctrl+shift+up        scroll_line_up
map ctrl+shift+down      scroll_line_down
map ctrl+shift+k         scroll_line_up
map ctrl+shift+j         scroll_line_down
map ctrl+shift+page_up   scroll_page_up
map ctrl+shift+page_down scroll_page_down
map ctrl+shift+home      scroll_home
map ctrl+shift+end       scroll_end
map ctrl+shift+h         show_scrollback

# Window management
map ctrl+shift+enter    new_window
map ctrl+shift+w        close_window
map ctrl+shift+]        next_window
map ctrl+shift+[        previous_window
map ctrl+shift+f        move_window_forward
map ctrl+shift+b        move_window_backward
map ctrl+shift+`        move_window_to_top
map ctrl+shift+1        first_window
map ctrl+shift+2        second_window
map ctrl+shift+3        third_window
map ctrl+shift+4        fourth_window
map ctrl+shift+5        fifth_window
map ctrl+shift+6        sixth_window
map ctrl+shift+7        seventh_window
map ctrl+shift+8        eighth_window
map ctrl+shift+9        ninth_window
map ctrl+shift+0        tenth_window
# You can open a new window running an arbitrary program, for example:
# map ctrl+shift+y      new_window mutt
# You can pass the current selection to the new program by using the @selection placeholder
# map ctrl+shift+y      new_window less @selection
# You can send the contents of the current screen + history
# buffer as stdin with the placeholders @text (plain text)
# and @ansi (includes text styling escape codes).
# For only the current screen, use @screen or @ansi_screen.
# The following command opens the scrollback buffer in less in a new window.
map ctrl+shift+y      new_window @ansi less +G -R

# Tab management
map ctrl+shift+right    next_tab
map ctrl+shift+left     previous_tab
map ctrl+shift+t        new_tab
map ctrl+shift+q        close_tab
map ctrl+shift+l        next_layout
map ctrl+shift+.        move_tab_forward
map ctrl+shift+,        move_tab_backward
map ctrl+alt+1          goto_tab 1
map ctrl+alt+2          goto_tab 2
# Just as with new_window, you can also pass arbitrary commands to new_tab.

# Miscellaneous
map ctrl+shift+u          input_unicode_character
# Open a currently visible URL using the keyboard.
# The program used to open the URL is specified in open_url_with.
# map ctrl+shift+e      run_simple_kitten text url_hints --program firefox --regex "http://[^ ]+"
map ctrl+shift+e        run_simple_kitten text url_hints
