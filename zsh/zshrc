# ssh / gpg keyring
export SSH_KEY_PATH="~/.ssh/rsa_id"
added_keys=`ssh-add -l`

if [ ! $(echo $added_keys | grep -o -e id_rsa) ]; then
    ssh-add "$HOME/.ssh/id_rsa"
fi
#eval `keychain --eval id_rsa`

autoload -Uz compinit
compinit

# Aliases
alias l='ls -q | column -c 80'
#alias la='ls -oAh'
alias la='ls -lah'
alias vim="nvim"
alias color="~/.dotfiles/changecolorargs.sh"
alias soph="cd /mnt/data/OneDrive\ -\ Washington\ University\ in\ St.\ Louis/Sophomore/"

#Functions
function match_filename() {
  find "$1" -iname "*$2*" -print
}
function match_contents() {
  grep -Ri "$1" -e "$2"
}
function matchrun_filename() {
  find "$1" -iname "*$2*" -print0 | xargs -0 ls -l
}
function matchrun_contents() {
  grep -Ri "$1" -e "$2" -lZ | xargs -0 "${@:3}"
}

# Evaluate dircolors
if [[ -f ~/.dircolors ]] ;
    then eval "$(dircolors -b ~/.dircolors)"
elif [[ -f /etc/DIR_COLORS ]] ;
    then eval $(dircolors -b /etc/DIR_COLORS)
fi

# Set up colored ls
ls --color -d . &>/dev/null && alias ls='ls --color'
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}

#ls after cd
auto-ls () { ls; }
chpwd_functions=( auto-ls $chpwd_functions )

#Misc options
export KEYTIMEOUT=5
DEFAULT_USER=gmend
# Uncomment the following line to enable command auto-correction.
#ENABLE_CORRECTION="true"

#Hist options
if [ -z "$HISTFILE" ]; then
    HISTFILE=$HOME/.zsh_history
fi
HISTSIZE=1000 #We have plenty of memory, save our history
SAVEHIST=1000
setopt NO_HIST_BEEP #No annoying beeping
setopt INC_APPEND_HISTORY SHARE_HISTORY HIST_IGNORE_DUPS HIST_EXPIRE_DUPS_FIRST

source ~/.dotfiles/zsh/completion.zsh
source ~/.dotfiles/zsh/keybindings.zsh
source ~/.dotfiles/zsh/termsupport.zsh
PATH+=":/home/gmend/.gem/ruby/2.5.0/bin/"
export PATH

#function zle-line-init zle-keymap-select {
#    VIM_PROMPT="%{$fg_bold[red]%} [% NORMAL]% %{$reset_color%}"
#    RPS1="${${KEYMAP/vicmd/$VIM_PROMPT}/(main|viins)/} $EPS1" # $(git_custom_status) $EPS1"
#    zle reset-prompt
#}
#zle -N zle-line-init
#zle -N zle-keymap-select

# pip zsh completion start
#function _pip_completion {
#  local words cword
#  read -Ac words
#  read -cn cword
#  reply=( $( COMP_WORDS="$words[*]" \
#             COMP_CWORD=$(( cword-1 )) \
#             PIP_AUTO_COMPLETE=1 $words[1] ) )
#}
#compctl -K _pip_completion pip
# pip zsh completion end

#Theme options
PURE_PROMPT_SYMBOL=‚ùØ
# Load zplug and plugins
if [[ ! -d "$HOME/.zplug" ]];then
    git clone https://github.com/zplug/zplug ~/.zplug
fi
ZPLUG_HOME="$HOME/.zplug"
#If zplug is properly installed, load it
if [ -f $ZPLUG_HOME/init.zsh ]; then
    source "$ZPLUG_HOME/init.zsh"
fi
#Load plugins/themes/etc
zplug "zsh-users/zsh-syntax-highlighting"
zplug "zsh-users/zsh-autosuggestions"
zplug "mafredri/zsh-async"
#export RPS1="%{$reset_color%}"
#zplug "plugins/vi-mode", from:oh-my-zsh
#zplug "denysdovhan/spaceship-prompt", use:spaceship.zsh, from:github, as:theme
#zplug "sindresorhus/pure", use:pure.zsh, as:theme
zplug "intelfx/pure", as:theme, use:pure.zsh

#let zplug manage itself like other packages
#zplug "zplug/zplug", hook-build:'zplug --self-manage'

#If zplug check gives output, ie, there are uninstalled plugins, install them
if ! zplug check --verbose; then
    printf "Install? [y/N]: "
    if read -q; then
        echo; zplug install
    fi
fi
zplug load #--verbose

#Plugin Options
ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=4'
ZSH_AUTOSUGGEST_BUFFER_MAX_SIZE=20
