# ssh / gpg keyring
export SSH_KEY_PATH="~/.ssh/rsa_id"
added_keys=`ssh-add -l`

if [ ! $(echo $added_keys | grep -o -e id_rsa) ]; then
    ssh-add "$HOME/.ssh/id_rsa"
fi
#eval `keychain --eval id_rsa`

autoload -Uz compinit
compinit
zstyle ':completion:*:*:nvim:*' file-patterns '^*.(aux|log|pdf|png|fls|gz|fdb_latexmk|xdv):source-files' '*:all-files'
#zstyle ':completion:*:*:qpdfview:*' file-patterns '^*.(aux|log|tex|fls|gz|fdb_latexmk):source-files' '*:all-files'
zstyle ':completion:*:*:qpdfview:*' file-patterns '*.pdf'
#zstyle ':completion:*:*:qpdfview:*' file-patterns '*.pdf|(./*(/))' '*.(pdf|dvi)|./*(/)' '*:all-files'
#directories

# Aliases
alias l='ls -q | column -c 80'
alias diff='diff --color=auto'
alias grep='grep --color=auto'
#alias la='ls -oAh'
alias la='ls -lah'
alias vim="nvim"
alias nvim="NVIM_LISTEN_ADDRESS=/tmp/nvimsocket nvim"
alias color="~/.dotfiles/changecolorargs.sh"
alias soph="cd /mnt/data/OneDrive\ -\ Washington\ University\ in\ St.\ Louis/Sophomore/"

#Functions
function match_filename() {
  find "$1" -iname "*$2*" -print
}
function match_contents() {
  grep -Ri "$1" -e "$2"
}
function matchrun_filename() {
  find "$1" -iname "*$2*" -print0 | xargs -0 ls -l
}
function matchrun_contents() {
  grep -Ri "$1" -e "$2" -lZ | xargs -0 "${@:3}"
}
function search() {
    grep --line-buffered --color=never -r "$1" * | fzf
}
#adds colors in ~/.Xresources to virtual terminal
vtColor() {
    if [ "$TERM" = "linux" ]; then
        _SEDCMD='s/.*\*color\([0-9]\{1,\}\).*#\([0-9a-fA-F]\{6\}\).*/\1 \2/p'
        for i in $(sed -n "$_SEDCMD" $HOME/.Xresources | awk '$1 < 16 {printf "\\e]P%X%s", $1, $2}'); do
            echo -en "$i"
        done
        clear
    fi
}

# Evaluate dircolors
if [[ -f ~/.dircolors ]] ;
    then eval "$(dircolors -b ~/.dircolors)"
elif [[ -f /etc/DIR_COLORS ]] ;
    then eval $(dircolors -b /etc/DIR_COLORS)
fi

# Set up colored ls
ls --color -d . &>/dev/null && alias ls='ls --color'
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}

#ls after cd
auto-ls () { ls; }
#chpwd_functions=( auto-ls $chpwd_functions )
chpwd_functions=( auto-ls )

#Misc options
export KEYTIMEOUT=5
DEFAULT_USER=gmend
#make ls use YYYY-MM-DD
export TIME_STYLE=long-iso
# Uncomment the following line to enable command auto-correction.
#ENABLE_CORRECTION="true"

#Hist options
if [ -z "$HISTFILE" ]; then
    HISTFILE=$HOME/.zsh_history
fi
HISTSIZE=1000 #We have plenty of memory, save our history
SAVEHIST=1000
setopt NO_HIST_BEEP #No annoying beeping
setopt INC_APPEND_HISTORY SHARE_HISTORY HIST_IGNORE_DUPS HIST_EXPIRE_DUPS_FIRST


#function zle-line-init zle-keymap-select {
#    VIM_PROMPT="%{$fg_bold[red]%} [% NORMAL]% %{$reset_color%}"
#    RPS1="${${KEYMAP/vicmd/$VIM_PROMPT}/(main|viins)/} $EPS1" # $(git_custom_status) $EPS1"
#    zle reset-prompt
#}
#zle -N zle-line-init
#zle -N zle-keymap-select

# pip zsh completion start
#function _pip_completion {
#  local words cword
#  read -Ac words
#  read -cn cword
#  reply=( $( COMP_WORDS="$words[*]" \
#             COMP_CWORD=$(( cword-1 )) \
#             PIP_AUTO_COMPLETE=1 $words[1] ) )
#}
#compctl -K _pip_completion pip
# pip zsh completion end

#Theme options
#PURE_PROMPT_SYMBOL=‚ùØ
#SPACESHIP_TIME_SHOW=true
SPACESHIP_EXEC_TIME_ELAPSED=3
SPACESHIP_BATTERY_THRESHOLD=15
SPACESHIP_VI_MODE_SHOW=false

#some oh my zsh files
source ~/.dotfiles/zsh/completion.zsh
source ~/.dotfiles/zsh/keybindings.zsh
source ~/.dotfiles/zsh/termsupport.zsh
source /usr/share/doc/pkgfile/command-not-found.zsh
### Load zplug and plugins ###
if [[ ! -d "$HOME/.zplug" ]];then
    git clone https://github.com/zplug/zplug ~/.zplug
fi
ZPLUG_HOME="$HOME/.zplug"
#If zplug is properly installed, load it
if [ -f $ZPLUG_HOME/init.zsh ]; then
    source "$ZPLUG_HOME/init.zsh"
fi
#Load plugins/themes/etc
zplug "mafredri/zsh-async"
zplug "denysdovhan/spaceship-prompt", use:spaceship.zsh, from:github, as:theme
zplug "zsh-users/zsh-syntax-highlighting"
zplug "zsh-users/zsh-autosuggestions"
zplug "zsh-users/zsh-history-substring-search"
zplug "zsh-users/zsh-completions"
zplug "srijanshetty/zsh-pip-completion"
zplug "aenda/zsh-diff-so-fancy", as:command, use:bin/git-dsf
#export RPS1="%{$reset_color%}"
#zplug "plugins/vi-mode", from:oh-my-zsh
#zplug "sindresorhus/pure", use:pure.zsh, as:theme
#zplug "intelfx/pure", as:theme, use:pure.zsh

#let zplug manage itself like other packages
#zplug "zplug/zplug", hook-build:'zplug --self-manage'

#If zplug check gives output, ie, there are uninstalled plugins, install them
if ! zplug check --verbose; then
    printf "Install? [y/N]: "
    if read -q; then
        echo; zplug install
    fi
fi
zplug load #--verbose
#############################

#Plugin Options
ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=4'
ZSH_AUTOSUGGEST_BUFFER_MAX_SIZE=20

#if [ "$TERM" = "linux" ]; then
#    _SEDCMD='s/.*\*color\([0-9]\{1,\}\).*#\([0-9a-fA-F]\{6\}\).*/\1 \2/p'
#    for i in $(sed -n "$_SEDCMD" $HOME/.Xresources | awk '$1 < 16 {printf "\\e]P%X%s", $1, $2}'); do
#        echo -en "$i"
#    done
#    clear
#fi
